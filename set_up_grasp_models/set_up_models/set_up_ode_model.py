import re


def convert_to_ode_model(file_in: str):
    """
    Given an input .m file with the GRASP matlab kinetic model, generates another .m file ready
    to be given as input to a matlab ODE solver.

    In particular, the x vector is substituted by two vectors:
      - y, which contains the metabolite concentrations (the quantitities being simulated);
      - Eref, which contains the enzyme concentrations

    And instead of returning fluxes the function returns y = S.v.

    Args:
        file_in: path to matlab .m file with kinetic model generated by GRASP.

    Returns:
        None
    """

    ode_model = ''

    with open(file_in, 'r')as f_in:
        else_count = 0
        line = f_in.readline()

        while line:
            if line.startswith('function'):
                new_line = line.replace('[f,grad]', 'y')
                new_line = re.sub('= (\S+)\(x', r'= \1_ode(y,Eref', new_line)
                ode_model += f'{new_line}\n'

            if line.startswith('else'):
                else_count += 1

            if (line.startswith('v = ') or line.startswith('E = ')) and else_count == 1:
                new_line = line.replace('x', 'Eref')
                ode_model += new_line

                if line.startswith('E = '):
                    ode_model += '\n'

            if line.startswith('m_'):
                new_line = re.sub('= x\(', r'= y(', line)
                ode_model += new_line

            if line.startswith('E('):
                new_line = re.sub('E\((\d+),:\) = x\(\d+,:', r'E(\1,:) = Eref(\1,:', line)
                ode_model += new_line

            if line.startswith('v('):
                new_line = line.replace('size(x,', 'size(y,')
                ode_model += new_line

            line = f_in.readline()

    ode_model += '\ny = Sred*(E.*v);'

    file_out = f'{file_in[:-2]}_ode.m'

    with open(file_out, 'w+') as f_out:
        f_out.write(ode_model)
